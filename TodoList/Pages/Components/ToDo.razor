
@page "/todo"

<h3>@HeaderName</h3>

<div class="progress-bar my-2" role="progressbar" style="width:@(PrecentageCompleted)%"
aria-valuemax="100" aria-valuemin="0">
    @(PrecentageCompleted)%

</div>

<EditForm Model="Task" class ="form-inline" OnValidSubmit="AddTask">
    <input class=" form-control col-4" type="text" @bind-value="Task.TaskName"/>
    <button class="btn btn-outline-primary mt-4">Add Task</button>
</EditForm>


<ul class="list-group my-4 ">

    @foreach (var taskitem in Tasklist)
    {
        if(taskitem.IsCompleted)
        {
            <li class="list-group-item list-group-item-success my-2" 
            @onclick="(()=>taskitem.IsCompleted=!taskitem.IsCompleted)">
                <del> @taskitem.TaskName></del>
            </li>
        }

        else
        {
            <li class=" list-group-item list-group-item-secondary my-2"
            @onclick="(()=>taskitem.IsCompleted=!taskitem.IsCompleted)">
                @taskitem.TaskName
            </li>
        }
    
    
    }


</ul>

@code {
    protected List<TaskComponent> Tasklist = new List<TaskComponent>();

    protected TaskComponent Task = new TaskComponent();

    private void AddTask()
    {
        Tasklist.Add(Task);
        Task = new TaskComponent();
    }

    public int PrecentageCompleted { get 
        { return Tasklist.Count>0 ?(Tasklist.Count(T=>T.IsCompleted)*100/Tasklist.Count):0;
        }}

    protected override void OnInitialized()
    {
        if (HeaderName == "")
        {
            HeaderName = "ToDo";
        }
    }

    [Parameter]
    public string HeaderName { get; set; }




}
